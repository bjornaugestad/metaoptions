.Dd Nov 25, 2005
.Os ISO C99
.Dt META_OPTIONS 3
.Sh NAME
.Nm gbs()
.Nd Generalized black & Scholes formula
.Sh SYNOPSIS
.Fd #include <metaoptions.h>
.Fo "double gbs"
.Fa "int fCall"
.Fa "double S"
.Fa "double X"
.Fa "double T"
.Fa "double r"
.Fa "double b"
.Fa "double v"
.Fc
.Fo "static inline double gbs_call"
.Fa "double S"
.Fa "double X"
.Fa "double T"
.Fa "double r"
.Fa "double b"
.Fa "double v"
.Fc
.Fo "static inline double gbs_put"
.Fa "double S"
.Fa "double X"
.Fa "double T"
.Fa "double r"
.Fa "double b"
.Fa "double v"
.Fc
.Sh DESCRIPTION
.Nm gbs()
implements the generalized Black&Scholes option pricing formula. Use it to price
European options, currency options or options on futures.
.Nm gbs_put()
and
.Nm gbs_call()
are inline functions of
.Nm gbs()
, designed to execute as fast as possible.
.Ss Arguments
.Bl -item
.It
.Fa fCall
.It
.Fa S
is the price of the underlying security. 
.It
.Fa X
is option strike price. 
.It
.Fa T
is time to expiry as fraction of year. 6 months == 0.5, 9 months == 0.75
.It
.Fa r
is the risk free interest rate. 10% == 0.10
.It
.Fa b
Cost of Carry. 10% == 0.10
.It
.Fa v
Volatility, 30% == 0.30
.El
.Sh RETURN VALUE
These functions return the value of a put or call.
.Sh EXAMPLE
.Bd -literal
double S = 75.0, X = 70.0, T = 0.5, r = 0.1, b = 0.05, v = 0.35;
double value = gbs(0, S, X, T, r, b, v);
assert(value == 4.087);
.Be
.Sh AUTHOR
.An B. Augestad, bjorn.augestad@gmail.com
